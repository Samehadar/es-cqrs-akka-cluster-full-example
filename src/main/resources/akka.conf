include "environment.conf"

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = INFO

  actor {
    provider = cluster

    serializers {
      common = "com.ingenuiq.note.command.persistence.CommonPersistenceSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = none
      "org.apache.avro.specific.SpecificRecordBase" = common
      "com.ingenuiq.note.query.common.PersistentEvent" = common
    }
  }

  remote {
    artery {
      transport = aeron-udp
      enabled = on

      canonical {
        hostname = "127.0.0.1"
        hostname = ${?HOSTNAME}
        port = 2551
        port = ${?AKKA_CLUSTER_PORT}
      }
    }
  }

  coordinated-shutdown.terminate-actor-system = on

  cluster {
    auto-down = off

    seed-nodes = ["akka://note-actor-system@127.0.0.1:2551"]
;     seed-nodes = ${?SEED_NODES}

    downing-provider-class = "tanukki.akka.cluster.autodown.MajorityLeaderAutoDowning"

    sharding {
      remember-entities = false
      journal-plugin-id = "cassandra-journal"
      snapshot-plugin-id = "cassandra-snapshot-store"
    }

    shutdown-after-unsuccessful-join-seed-nodes = 40s

    metrics.native-library-extract-folder = ${user.dir}/target/native
  }

  custom-downing {
    stable-after = 20s

    majority-leader-auto-downing {
      majority-member-role = ""
      down-if-in-minority = true
      shutdown-actor-system-on-resolution = true
    }
  }


  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  http.parsing.illegal-response-header-value-processing-mode = warn
}

cassandra-journal {
  contact-points = ${services.cassandra.contact-points}
  default-port = ${services.cassandra.default-port}
  keyspace = ${services.cassandra.keyspace-prefix}_note_akka_journal
  log-queries = on
  slow-query-latency-threshold-millis = 3000
  authentication {
    username = ${services.cassandra.username}
    password = ${services.cassandra.password}
  }
  replication-factor = ${services.cassandra.replication-factor}

  event-adapters {
    command-tagging = "com.ingenuiq.note.command.persistence.TaggingEventAdapter"
  }

  event-adapter-bindings {
    "org.apache.avro.specific.SpecificRecordBase" = [command-tagging]
    "com.ingenuiq.note.query.common.PersistentEvent" = [command-tagging]
  }
}

cassandra-snapshot-store {
  contact-points = ${services.cassandra.contact-points}
  default-port = ${services.cassandra.default-port}
  keyspace = ${services.cassandra.keyspace-prefix}_note_akka_snapshot
  authentication {
    username = ${services.cassandra.username}
    password = ${services.cassandra.password}
  }
  replication-factor = ${services.cassandra.replication-factor}
}

cassandra-query-journal {
  refresh-interval = 250ms
}